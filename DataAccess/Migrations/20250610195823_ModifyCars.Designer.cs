// <auto-generated />
using System;
using DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccess.Migrations
{
    [DbContext(typeof(DealershipDbContext))]
    [Migration("20250610195823_ModifyCars")]
    partial class ModifyCars
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BusinessLogic.Entities.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReviewDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.HasIndex("UserId");

                    b.ToTable("Review");
                });

            modelBuilder.Entity("CarOrder", b =>
                {
                    b.Property<int>("OrdersId")
                        .HasColumnType("int");

                    b.Property<int>("ProductsId")
                        .HasColumnType("int");

                    b.HasKey("OrdersId", "ProductsId");

                    b.HasIndex("ProductsId");

                    b.ToTable("CarOrder");
                });

            modelBuilder.Entity("DataAccess.Data.Entities.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(5);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Engine")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Horsepower")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("InStock")
                        .HasColumnType("bit");

                    b.Property<string>("Make")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Mileage")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Cars", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 3,
                            Description = "Silver color, Automatic transmission, Bluetooth, Backup Camera, Keyless Entry",
                            Engine = "2.0L 4-cylinder",
                            Horsepower = 169,
                            ImageUrl = "https://today.ua/wp-content/uploads/2021/12/Toyota-Corolla-1.jpg",
                            InStock = true,
                            Make = "Toyota",
                            Mileage = 20000,
                            Model = "Corolla",
                            Price = 25000.0,
                            Year = 2022
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 3,
                            Description = "Red color, Manual transmission, Leather Seats, Navigation System, Heated Seats",
                            Engine = "5.0L V8",
                            Horsepower = 450,
                            ImageUrl = "https://img.automoto.ua/overview/ford-mustang-2020-3fd-huge-1564.jpg",
                            InStock = true,
                            Make = "Ford",
                            Mileage = 15000,
                            Model = "Mustang",
                            Price = 35000.0,
                            Year = 2020
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            Description = "White color, Automatic transmission, Sunroof, Adaptive Cruise Control, Parking Assistance",
                            Engine = "2.0L 4-cylinder",
                            Horsepower = 255,
                            ImageUrl = "https://hips.hearstapps.com/hmg-prod/images/2021-bmw-3-series-mmp-1-1593549868.jpg",
                            InStock = true,
                            Make = "BMW",
                            Mileage = 12000,
                            Model = "3 Series",
                            Price = 40000.0,
                            Year = 2021
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 4,
                            Description = "Red color, Automatic transmission, Autopilot, Full Self-Driving Capability, Premium Audio System",
                            Engine = "Electric Motor",
                            Horsepower = 322,
                            ImageUrl = "https://cdn0.riastatic.com/photosnew/auto/photo/tesla_model-3__518635415f.jpg",
                            InStock = true,
                            Make = "Tesla",
                            Mileage = 8000,
                            Model = "Model 3",
                            Price = 45000.0,
                            Year = 2022
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 1,
                            Description = "Gray color, Automatic transmission, Virtual Cockpit, Panoramic Sunroof, Apple CarPlay",
                            Engine = "2.0L 4-cylinder",
                            Horsepower = 248,
                            ImageUrl = "https://i.infocar.ua/i/12/6234/1400x936.jpg",
                            InStock = true,
                            Make = "Audi",
                            Mileage = 15000,
                            Model = "Q5",
                            Price = 38000.0,
                            Year = 2021
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 1,
                            Description = "Silver color, Automatic transmission, MBUX Infotainment, Heated Steering Wheel, Air Suspension",
                            Engine = "2.0L 4-cylinder",
                            Horsepower = 255,
                            ImageUrl = "https://i.infocar.ua/i/2/6241/118625/1024x.jpg",
                            InStock = true,
                            Make = "Mercedes-Benz",
                            Mileage = 18000,
                            Model = "E-Class",
                            Price = 42000.0,
                            Year = 2020
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 3,
                            Description = "Black color, Automatic transmission, Leather Seats, Captain's Chairs, Wireless Charging",
                            Engine = "5.3L V8",
                            Horsepower = 355,
                            ImageUrl = "https://i.infocar.ua/i/12/6229/1200x630.jpg",
                            InStock = true,
                            Make = "Chevrolet",
                            Mileage = 25000,
                            Model = "Tahoe",
                            Price = 55000.0,
                            Year = 2020
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 2,
                            Description = "Silver color, Automatic transmission, Leather Seats, Panoramic Roof, Power Liftgate",
                            Engine = "3.5L V6",
                            Horsepower = 295,
                            ImageUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQ37JJrfO9luseU6bzVX5qjWfk5hvyF1QaaKROr4zfrBA&s",
                            InStock = true,
                            Make = "Lexus",
                            Mileage = 20000,
                            Model = "RX 350",
                            Price = 42000.0,
                            Year = 2020
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 3,
                            Description = "Blue color, Automatic transmission, Towing Package, Tailgate Step, Pro Trailer Backup Assist",
                            Engine = "3.5L V6",
                            Horsepower = 375,
                            ImageUrl = "https://i.infocar.ua/i/2/6467/122061/1920x.jpg",
                            InStock = true,
                            Make = "Ford",
                            Mileage = 15000,
                            Model = "F-150",
                            Price = 45000.0,
                            Year = 2021
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 1,
                            Description = "Black color, Automatic transmission, Heads-Up Display, Gesture Control, Wireless Charging",
                            Engine = "3.0L 6-cylinder",
                            Horsepower = 335,
                            ImageUrl = "https://img.automoto.ua/overview/bmw-x5-2021-e98-huge-1897.jpg",
                            InStock = true,
                            Make = "BMW",
                            Mileage = 10000,
                            Model = "X5",
                            Price = 60000.0,
                            Year = 2021
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 3,
                            Description = "Blue color, Automatic transmission, Toyota Safety Sense, Apple CarPlay, Android Auto",
                            Engine = "2.5L 4-cylinder",
                            Horsepower = 203,
                            ImageUrl = "https://hips.hearstapps.com/hmg-prod/images/2020-toyota-rav4-mmp-1-1570472132.jpg",
                            InStock = true,
                            Make = "Toyota",
                            Mileage = 18000,
                            Model = "RAV4",
                            Price = 32000.0,
                            Year = 2020
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = 4,
                            Description = "White color, Automatic transmission, Autopilot, Full Self-Driving Capability, Panoramic Glass Roof",
                            Engine = "Electric Motor",
                            Horsepower = 384,
                            ImageUrl = "https://wah.ua/static/content/thumbs/744*496/4/20/dsxi56-8cff2f0dc3ae189e43186c5bcca08204.jpeg",
                            InStock = true,
                            Make = "Tesla",
                            Mileage = 6000,
                            Model = "Model Y",
                            Price = 55000.0,
                            Year = 2022
                        },
                        new
                        {
                            Id = 13,
                            CategoryId = 3,
                            Description = "Red color, Automatic transmission, Trailer Sway Control, Apple CarPlay, Android Auto",
                            Engine = "5.3L V8",
                            Horsepower = 355,
                            ImageUrl = "https://cdn.motor1.com/images/mgl/EBx7o/s1/2019-chevrolet-silverado-trail-boss.jpg",
                            InStock = true,
                            Make = "Chevrolet",
                            Mileage = 25000,
                            Model = "Silverado",
                            Price = 38000.0,
                            Year = 2020
                        },
                        new
                        {
                            Id = 14,
                            CategoryId = 3,
                            Description = "Gray color, CVT transmission, Ford Co-Pilot360, Wireless Charging Pad, Hands-Free Liftgate",
                            Engine = "2.5L 4-cylinder Hybrid",
                            Horsepower = 200,
                            ImageUrl = "https://hips.hearstapps.com/hmg-prod/images/2021-ford-escape-phev-108-1651779562.jpg?crop=0.843xw:0.631xh;0.0753xw,0.336xh&resize=1200:*",
                            InStock = true,
                            Make = "Ford",
                            Mileage = 12000,
                            Model = "Escape",
                            Price = 30000.0,
                            Year = 2021
                        },
                        new
                        {
                            Id = 15,
                            CategoryId = 1,
                            Description = "Black color, Automatic transmission, MBUX Infotainment, Panoramic Sunroof, Heated Seats",
                            Engine = "2.0L 4-cylinder",
                            Horsepower = 255,
                            ImageUrl = "https://lh6.googleusercontent.com/proxy/IqRMJz8oK5fas4AlZXL8mGS_JsFgrKlHHASXVHuwjhEzpYDjkZOjiBP9OEeMoXAEm8VhkWBgcLWfrc27H6ma08Q8UfYD-QQyR9WGiocdTlJ4rD629pY3-rQW3v2404pCY2YM6vLP42cH9I7-xw",
                            InStock = true,
                            Make = "Mercedes-Benz",
                            Mileage = 10000,
                            Model = "GLC",
                            Price = 48000.0,
                            Year = 2021
                        },
                        new
                        {
                            Id = 16,
                            CategoryId = 1,
                            Description = "Blue color, Quattro all-wheel drive, Virtual Cockpit, Bang & Olufsen 3D Premium Sound System",
                            Engine = "4.0L V8 Twin-Turbo",
                            Horsepower = 591,
                            ImageUrl = "https://www.topgear.com/sites/default/files/2023/09/33156-RS7PERFORMANCEASCARIBLUEJORDANBUTTERS132.jpg",
                            InStock = true,
                            Make = "Audi",
                            Mileage = 8000,
                            Model = "RS 7",
                            Price = 110000.0,
                            Year = 2023
                        },
                        new
                        {
                            Id = 17,
                            CategoryId = 3,
                            Description = "Silver color, Automatic transmission, Honda Sensing Suite, Apple CarPlay, Android Auto",
                            Engine = "1.5L 4-cylinder",
                            Horsepower = 192,
                            ImageUrl = "https://www.ixbt.com/img/n1/news/2023/1/2/2022-honda-accord-sport-2-0t-15_large.png",
                            InStock = true,
                            Make = "Honda",
                            Mileage = 8000,
                            Model = "Accord",
                            Price = 32000.0,
                            Year = 2022
                        },
                        new
                        {
                            Id = 18,
                            CategoryId = 2,
                            Description = "White color, Automatic transmission, Uconnect Infotainment, Apple CarPlay, Android Auto",
                            Engine = "3.6L V6",
                            Horsepower = 295,
                            ImageUrl = "https://media.ed.edmunds-media.com/jeep/grand-cherokee/2021/oem/2021_jeep_grand-cherokee_4dr-suv_80th_fq_oem_1_1600.jpg",
                            InStock = true,
                            Make = "Jeep",
                            Mileage = 12000,
                            Model = "Grand Cherokee",
                            Price = 45000.0,
                            Year = 2021
                        },
                        new
                        {
                            Id = 19,
                            CategoryId = 2,
                            Description = "Black color, Automatic transmission, Lexus Enform, Power Liftgate, Heated Front Seats",
                            Engine = "2.0L 4-cylinder",
                            Horsepower = 235,
                            ImageUrl = "https://i.infocar.ua/i/12/6078/1400x936.jpg",
                            InStock = true,
                            Make = "Lexus",
                            Mileage = 15000,
                            Model = "NX",
                            Price = 38000.0,
                            Year = 2020
                        },
                        new
                        {
                            Id = 20,
                            CategoryId = 1,
                            Description = "Silver color, PDK transmission, Sport Chrono Package, Adaptive Sport Seats",
                            Engine = "3.0L Flat-6 Turbo",
                            Horsepower = 450,
                            ImageUrl = "https://car-images.bauersecure.com/wp-images/12872/1porschecarrera4scarreview.jpg",
                            InStock = true,
                            Make = "Porsche ",
                            Mileage = 1000,
                            Model = "911 Carrera 4S PDK",
                            Price = 202586.0,
                            Year = 2023
                        },
                        new
                        {
                            Id = 21,
                            CategoryId = 3,
                            Description = "Yellow color, Manual transmission, Performance Exhaust, Magnetic Ride Control, Launch Control",
                            Engine = "6.2L V8",
                            Horsepower = 455,
                            ImageUrl = "https://hips.hearstapps.com/hmg-prod/images/2021-chevrolet-camaro-mmp-1-1585333717.jpg?crop=0.466xw:0.451xh;0.186xw,0.272xh&resize=1200:*",
                            InStock = true,
                            Make = "Chevrolet",
                            Mileage = 8000,
                            Model = "Camaro",
                            Price = 45000.0,
                            Year = 2021
                        },
                        new
                        {
                            Id = 22,
                            CategoryId = 1,
                            Description = "Gray color, Automatic transmission, Virtual Cockpit, Bang & Olufsen Sound System, Heated Front Seats",
                            Engine = "3.0L V6",
                            Horsepower = 335,
                            ImageUrl = "https://audi.autoua.net/media/catalog/9/3/p1763493-1582023386.jpg",
                            InStock = true,
                            Make = "Audi",
                            Mileage = 12000,
                            Model = "A6",
                            Price = 55000.0,
                            Year = 2022
                        },
                        new
                        {
                            Id = 23,
                            CategoryId = 3,
                            Description = "Green color, CVT transmission, EyeSight Driver Assist, Symmetrical All-Wheel Drive, X-Mode for Off-Road",
                            Engine = "2.5L 4-cylinder",
                            Horsepower = 182,
                            ImageUrl = "https://www.autocentre.ua/wp-content/uploads/2021/06/2022-subaru-forester-jdm-2.jpg",
                            InStock = true,
                            Make = "Subaru",
                            Mileage = 10000,
                            Model = "Forester",
                            Price = 35000.0,
                            Year = 2022
                        },
                        new
                        {
                            Id = 24,
                            CategoryId = 3,
                            Description = "White color, Automatic transmission, Blind-Spot Collision-Avoidance Assist, Rear Occupant Alert, Android Auto",
                            Engine = "2.5L 4-cylinder",
                            Horsepower = 191,
                            ImageUrl = "https://i.infocar.ua/img/news-/148028/foto_003.jpg",
                            InStock = true,
                            Make = "Hyundai",
                            Mileage = 8000,
                            Model = "Santa Fe",
                            Price = 32000.0,
                            Year = 2021
                        },
                        new
                        {
                            Id = 25,
                            CategoryId = 2,
                            Description = "Black color, Automatic transmission, Blind Spot View Monitor, Apple CarPlay, Android Auto",
                            Engine = "3.8L V6",
                            Horsepower = 291,
                            ImageUrl = "https://media.ed.edmunds-media.com/kia/telluride/2020/oem/2020_kia_telluride_4dr-suv_sx_fq_oem_1_1600.jpg",
                            InStock = true,
                            Make = "Kia",
                            Mileage = 10000,
                            Model = "Telluride",
                            Price = 42000.0,
                            Year = 2020
                        },
                        new
                        {
                            Id = 26,
                            CategoryId = 1,
                            Description = "White color, AMG Line Exterior, Magic Body Control, MBUX Interior Assistant",
                            Engine = "W222 • 550 Long G-tronic",
                            Horsepower = 455,
                            ImageUrl = "https://www.jonathanmotorcars.com/imagetag/1318/main/l/Used-2016-Mercedes-Benz-S-Class-S-550-4MATIC-1623103884.jpg",
                            InStock = true,
                            Make = "Mercedes-Benz",
                            Mileage = 100500,
                            Model = "S-Class",
                            Price = 48000.0,
                            Year = 2016
                        },
                        new
                        {
                            Id = 27,
                            CategoryId = 1,
                            Description = "Blue color, Automatic transmission, Apple CarPlay, Android Auto, Wireless Charging",
                            Engine = "2.0L 4-cylinder",
                            Horsepower = 255,
                            ImageUrl = "https://www.cnet.com/a/img/resize/9250bb4d5b5023aaa610d205b47680689cb3835a/hub/2020/06/01/91c0b3b4-0010-4b21-bc33-0b1e2d1edf86/2021-bmw-4-series-038.jpg?auto=webp&width=1920",
                            InStock = true,
                            Make = "BMW",
                            Mileage = 15000,
                            Model = "4 Series",
                            Price = 50000.0,
                            Year = 2021
                        },
                        new
                        {
                            Id = 28,
                            CategoryId = 4,
                            Description = "Blue color, Automatic transmission, All-wheel drive, Leather interior, Bowers & Wilkins Premium Sound",
                            Engine = "2.0L Inline-4 Turbo",
                            Horsepower = 407,
                            ImageUrl = "https://resource.digitaldealer.com.au/image/2223556155f445be8e0656267031590_770_0-c.jpg",
                            InStock = true,
                            Make = "Volvo",
                            Mileage = 15000,
                            Model = "XC90",
                            Price = 55000.0,
                            Year = 2020
                        },
                        new
                        {
                            Id = 29,
                            CategoryId = 2,
                            Description = "Black color, Automatic transmission, Lexus Enform, Power Liftgate, Heated Front Seats",
                            Engine = "2.0L 4-cylinder",
                            Horsepower = 235,
                            ImageUrl = "https://i.infocar.ua/i/12/6078/1400x936.jpg",
                            InStock = true,
                            Make = "Lexus",
                            Mileage = 15000,
                            Model = "NX",
                            Price = 38000.0,
                            Year = 2020
                        },
                        new
                        {
                            Id = 30,
                            CategoryId = 3,
                            Description = "Red color, Automatic transmission, Ford Co-Pilot360, Sync 4 Infotainment, Tri-Zone Climate Control",
                            Engine = "2.3L 4-cylinder",
                            Horsepower = 300,
                            ImageUrl = "https://fordmaster.com/upload/iblock/1e8/1e8262201ccfa5f479bef3a7b4020218.jpg",
                            InStock = true,
                            Make = "Ford",
                            Mileage = 10000,
                            Model = "Explorer",
                            Price = 45000.0,
                            Year = 2022
                        });
                });

            modelBuilder.Entity("DataAccess.Data.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 2,
                            Name = "Diesel"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Electric"
                        },
                        new
                        {
                            Id = 1,
                            Name = "Gasoline"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Hybrid"
                        });
                });

            modelBuilder.Entity("DataAccess.Data.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<double>("TotalPrice")
                        .HasColumnType("float");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Orders", (string)null);
                });

            modelBuilder.Entity("DataAccess.Data.Entities.RefreshToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("RefreshTokens", (string)null);
                });

            modelBuilder.Entity("DataAccess.Data.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("BusinessLogic.Entities.Review", b =>
                {
                    b.HasOne("DataAccess.Data.Entities.Car", "Car")
                        .WithMany("Reviews")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccess.Data.Entities.User", "User")
                        .WithMany("Reviews")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CarOrder", b =>
                {
                    b.HasOne("DataAccess.Data.Entities.Order", null)
                        .WithMany()
                        .HasForeignKey("OrdersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccess.Data.Entities.Car", null)
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DataAccess.Data.Entities.Car", b =>
                {
                    b.HasOne("DataAccess.Data.Entities.Category", "Category")
                        .WithMany("Cars")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("DataAccess.Data.Entities.Order", b =>
                {
                    b.HasOne("DataAccess.Data.Entities.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DataAccess.Data.Entities.RefreshToken", b =>
                {
                    b.HasOne("DataAccess.Data.Entities.User", "User")
                        .WithMany("RefreshTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("DataAccess.Data.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("DataAccess.Data.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccess.Data.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("DataAccess.Data.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DataAccess.Data.Entities.Car", b =>
                {
                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("DataAccess.Data.Entities.Category", b =>
                {
                    b.Navigation("Cars");
                });

            modelBuilder.Entity("DataAccess.Data.Entities.User", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("RefreshTokens");

                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
